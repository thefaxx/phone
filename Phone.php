<?php

class Phone
{
    private $strPhone;
    private $mobileRegex;
    private $country;
    private $countryCode;
    private $localCode;
    private $arrCodes = array
    (
        49      => array('de', '^00491'),
        20	    => array('eg', '^0020(10|11|12|16|18)'),
        240	    => array('gq', '^00240(2|3|4|5|6|7)'),
        251	    => array('et', '^00251(9)'),
        93	    => array('af', '^0093(7|8)'),
        355	    => array('al', '^00355(67|68|69)'),
        213	    => array('dz', '^00213(5|7|9[0-4])'),
        684	    => array('as', '^0016842,001684733)'),
        376	    => array('ad', '^00376(3|4|5|6)'),
        244	    => array('ao', '^00244(9)'),
        1268    => array('ag', '^001268(406|409|464|72|764|77|78[1-6]|788)'),
        54	    => array('ar', '^0054(9)'),
        374	    => array('am', '^00374(72|73|79|9)'),
        297	    => array('aw', '^00297(56|59|73|74|96|99)'),
        994	    => array('az', '^00994(40|47|55|70|50)'),
        61	    => array('au', '^0061(071|11|1[3-9]|4|5)'),
        1242    => array('bs', '^001242(357|359|375|395|422|423|427|456|457|464|477|55[1-4]|55[6-9]|565|636)'),
        973	    => array('bh', '^00973(3|6|9)'),
        880	    => array('bd', '^00880(1)'),
        1246    => array('bb', '^001246(23|24|25|26|45|82)'),
        32	    => array('be', '^0032(44|45|47|48|49)'),
        501	    => array('bz', '^00501(6)'),
        229	    => array('bj', '^00229(0|40|42|4[4-8]|5[6-8]|60|64|6[8-7]4|76|77|79|8[4-9]|9)'),
        1441    => array('bm', '^001441(5|7)'),
        975	    => array('bt', '^00975(17|9)'),
        591	    => array('bo', '^00591(7)'),
        387	    => array('ba', '^00387(60|61|62|63|64|65|66|90)'),
        267	    => array('bw', '^00267(7)'),
        55	    => array('br', '^0055(11[7-9]|12[7-9]|13[7-9]|14[7-9]|15[7-9]|16[7-9]|17[7-9]|18[7-9]|19[7-9]|21[7-9]|22[7-9]|24[7-9]|27[7-9]|28[7-9]|31[7-9]|32[7-9]|33[7-9]|34[7-9]|35[7-9]|369|3[7-9]|38[7-9]|399|41[7-9]|42[7-9]|43[7-9]|44[7-9]|45[7-9]|46[7-9]|47[7-9]|48[7-9]|49[7-9]|51[7-9]|53[7-9]|54[7-9]|55[7-9]|62[7-9]|63[7-9]|64[7-9]|65[7-9]|66[7-9]|67[7-9]|68[7-9]|69[7-9]|71[7-9]|73[7-9]|74[7-9]|75[7-9]|77[7-9]|789|79[7-9]|81[7-9]|82[7-9]|83[7-9]|84[7-9]|85[7-9]|86[7-9]|87[7-9]|88[7-9]|89[7-9]|91[7-9]|92[7-9]|93[7-9]|94[7-9]|95[7-9]|96[7-9]|97[7-8]|98[7-9]|99[7-9])'),
        673	    => array('bn', '^00673(227|8)'),
        359	    => array('bg', '^00359(48|88|17|49|79|98|99|87|89)'),
        226	    => array('bf', '^00226(70|72|76|78)'),
        257	    => array('bi', '^00257(29|6|8|9)'),
        56	    => array('cl', '^0056(568|569|600|8|9)'),
        86	    => array('cn', '^0086(13|153|159|568|569|886)'),
        682	    => array('ck', '^00682(50|51|52|53|54|55|56|58|6)'),
        506	    => array('cr', '^00506(1|283|284|3|712|8)'),
        45	    => array('dk', '^0045(20[6-9]|22|25[1-6]|40[5-9]|41[1-3]|416|501[0-4]|50[4-5]|50[7-9]|60[6-8]|609[1-5])'),
        1767    => array('dm', '^001767(225|235|245|265|27[5-7]|31[5-7]|42[0-1]|447|504|61[4-6])'),
        1809    => array('do', '^001809(,001829)'),
        253	    => array('dj', '^00253(8)'),
        593	    => array('ec', '^00593(3[5-7]|91[5-9]|9[3-4]|96[8-9]|97|991|99[3-6]|98|990|992|99[7-9]|[8-9])'),
        225	    => array('ci', '^00225(0|[8-9]|0[5-6])'),
        503	    => array('sv', '^00503(3[8-9]|[7-9])'),
        291	    => array('er', '^00291(171|172|173|7)'),
        372	    => array('ee', '^00372(5)'),
        298	    => array('fo', '^00298(2[1-9]|5|7|9[1-9])'),
        679	    => array('fj', '^00679(2141|2142|9)'),
        358	    => array('fi', '^00358(40|42|438|45[0-1]|4559|456|4[8-9]|432|439|46|50|4570|4573|457[4-5]|4)'),
        33	    => array('fr', '^0033(6|7)'),
        594	    => array('gf', '^00594(694)'),
        241	    => array('ga', '^00241(0[3-1]1|1[4-5]|[2-3]|41|[5-7]|8[0-1]|8[4-5]|87|89|91|9[4-5]|97)'),
        220	    => array('gm', '^00220(7|810|820|88|9)'),
        995	    => array('ge', '^00995(98|99|55|77|93|3226|3297|90|95|97)'),
        233	    => array('gh', '^00233(20|2160|2170|23|24|26|27|28)'),
        350	    => array('gi', '^00350(54|56|57|58)'),
        1473	=> array('gd', '^001473(349|40[3-1]1|41[5-2]0|441|449|45[6-9]|53[3-8]|773)'),
        30	    => array('gr', '^0030(69|697|699|693|694)'),
        299	    => array('gl', '^00299(22|23|24|4|5)'),
        44	    => array('uk', '^0044(7|770[1-1]6|771[8-2]0|772[4-2]5|772[9-3]2|7734|7736|773[8-4]0|774[2-3]|774[5-6]|774[9-5]6|7759|776[1-4]|778[3-4]|7793|780[1-3]|780[8-9]|781[9-2]1|783[4-5]|784[0-5]|784[9-5]1|7860|7864|787[1-4]|7885|7889|7892|7912|792[1-2]|7925|793[3-6]|7938|7955|7999|777[2-3]|7779|779[0-2]|7794|7800|7805|7807|781[1-7]|7837|785[4-5]|7866|7870|7875|789[0-1]|7896|7929|796[4-7]7|7980|7989|7722|7726|775[7-8]|7804|7806|7847|7852|790[3-6]|7908|7910|791[3-4]|793[0-2]|7931|793[9-5]4|795[6-6]3|7981|798[2-8]7)'),
        590	    => array('gp', '^00590(690)'),
        1671	=> array('gu', '^001671(777)'),
        502	    => array('gt', '^00502(2[0-1]|27|2[9-3]2|37|39|[4-5]|6[0-2]|659|67|6[9-7]2|759|77|7[9-8]2|859|87|8[9-9]2|959|97|99)'),
        224	    => array('gn', '^00224(11|12|13|14|60|62|63|64)'),
        245	    => array('gw', '^00245(29|6|7)'),
        592	    => array('gy', '^00592(6)'),
        509	    => array('ht', '^00509(251|3|4|5|7|851)'),
        504	    => array('hn', '^00504(3|8|9)'),
        852	    => array('hk', '^00852(17|6|7|9)'),
        91	    => array('in', '^0091(7|8|9)'),
        62	    => array('id', '^0062(13|28|8)'),
        964	    => array('iq', '^00964(73|75|7[7-9]|770[1-6]|780[1-4]|790[1-4]|750|730)'),
        98	    => array('ir', '^0098(9)'),
        353	    => array('ie', '^00353(8)'),
        354	    => array('is', '^00354(3|6|8)'),
        972	    => array('il', '^00972(05|06|5|6|52|53|58|64|65)'),
        39	    => array('it', '^0039(3|563|370|377|34|33[0-1]|33[3-9]|360|363|368|320|32[2-3]|32[7-9]|380|383|38[8-9])'),
        1876    => array('jm', '^001876(210|30[1-1]0|31[2-9]|3[2-4]9|5[3-4]|57|621|700|707|77|78[1-4]|78[7-9]3|79[6-9]9|80[1-9]|8[1-9]|909|919|990|995|997|999)'),
        81	    => array('jp', '^0081(70|80|90)'),
        967	    => array('ye', '^00967(7)'),
        962	    => array('jo', '^00962(1544|164|7)'),
        1345    => array('ky', '^001345(32|514|51[6-7]|52[5-7]|54[5-9]|91[6-7]|919|92[4-9]|93[8-9])'),
        855	    => array('kh', '^00855(1|9)'),
        237	    => array('cm', '^00237(5|6|7|8|9)'),
        238	    => array('cv', '^00238(9)'),
        974	    => array('qa', '^00974(1245|21|22|28|5|65|66)'),
        254	    => array('ke', '^00254(7)'),
        996	    => array('kg', '^00996(31258|31295|31296|31297|31298|50|51|52|543|555)'),
        686	    => array('ki', '^00686(30|9)'),
        57	    => array('co', '^0057(3)'),
        2697    => array('km', '^002693|17)'),
        242	    => array('cd', '^00242(0|4|5|6)'),
        385	    => array('hr', '^00385(098|099|60|62|9)'),
        53	    => array('cu', '^0053(21355[6-7]|213657|213690|2268[8-9]|23427[7-8]|23428[0-2]|2441[7-9]|2461|3146[6-9]|32259|33266[8-9]|332671|33267[4-9]|33308[8-9]|4128|4138|42210|432458|43255|45249|45279|45616|45679|46319|52|58|726[3-4]|726[8-7]0|728[0-1]|75[0-1]|756|775[2-3]|785|7880|788[5-9]2|82749)'),
        965	    => array('kw', '^00965(6|7|9)'),
        856	    => array('la', '^00856(20)'),
        266	    => array('ls', '^00266(5|6)'),
        371	    => array('lv', '^00371(2|55|58|59|8|9)'),
        961	    => array('lb', '^00961(3|70|71)'),
        231	    => array('lr', '^00231(03|28|3[8-4]1|4[6-7]|5|6[4-9]|7)'),
        218	    => array('ly', '^00218(91|92)'),
        423	    => array('li', '^00423(5|6|7)'),
        370	    => array('lt', '^00370(6)'),
        352	    => array('lu', '^00352(621|628|661|668|691|698)'),
        853	    => array('mo', '^00853(6|901)'),
        261	    => array('mg', '^00261(3)'),
        265	    => array('mw', '^00265(8|9)'),
        60	    => array('my', '^0060(1)'),
        960	    => array('mv', '^00960(7|9)'),
        223	    => array('ml', '^00223(50|51|52|53|54|6|9)'),
        356	    => array('mt', '^00356(7|9)'),
        212	    => array('ma', '^00212(1|[6-7]|92|12|14|60|6[3-5]|69|7[4-5]|79)'),
        596	    => array('mq', '^00596(696)'),
        222	    => array('mr', '^00222(6)'),
        230	    => array('mu', '^00230(25|42[1-3]|49|7[2-9]|87[5-6]|91)'),
        2696	=> array('yt', '^002692|3|5|6|7|8|9)'),
        389	    => array('mk', '^00389(51|7,0052,005233,005255,005281)'),
        691	    => array('fm', '^00691(97)'),
        373	    => array('md', '^00373(562|567|6|7|9|69)'),
        377	    => array('mc', '^00377(4|6)'),
        976	    => array('mn', '^00976(91|96|99)'),
        381	    => array('me', '^00381(6|67|68|69)'),
        1664    => array('ms', '^001664(492)'),
        258	    => array('mz', '^00258(8)'),
        95	    => array('mm', '^0095(9)'),
        264	    => array('na', '^00264(60|81)'),
        674	    => array('nr', '^00674(555|8)'),
        977	    => array('np', '^00977(98)'),
        687	    => array('nc', '^00687(7[6-8]7|9[1-7])'),
        64	    => array('nz', '^0064(2|83|84|87)'),
        505	    => array('ni', '^00505(|14|50|6|77|8|9)'),
        599	    => array('an', '^00599(3181|318[4-6]|367|4161|416[5-8]|51|52[0-4]|52[6-7]|529|5[4-7]|58[0-1]|586|59|6|70[0-1]|720|750|7[8-9]|8|95[1-2]|95[4-6]|96)'),
        31	    => array('nl', '^0031(6|614|624|64[1-3]|618|628|638|648|61[6-7]|619|626|633|64[4-5]|647|649|611|615|621|625|627|629|646|650|652|65[4-5]|610|61[2-3]|620|62[2-3]|630|651|653|65[6-9]|665)'),
        227	    => array('ne', '^00227(2[4-5]|6[2-3]|8[4-5]|9[4-5]|[1-2]|3[9-4]0|4[6-9]|5|69|79|[8-9])'),
        234	    => array('ng', '^00234(1288|1290|1320|1342|1460|147[0-1]|147[5-9]|1490|1497|1759|177[4-5]|470|77[4-5]|80|802|808|90|80[3-7])'),
        6723    => array('nf', '^006723(4|5|6|7)'),
        47	    => array('no', '^0047(41[0-1]|41[4-9]|47[0-1]|472[0-2]|47[4-8]2|488[4-9]|489[4-9]|9[0-1]|9[4-7]|99|4|9|40|4[2-6]|477[7-9]|48[3-9]|49|9[2-3]|942|98)'),
        43	    => array('at', '^0043(644|65[1-3]|655|657|659|661|663|66[5-9]|686|688|6[7-9]|711|720|730|740|780|680|664|681|699|660|678|676|650)'),
        968	    => array('om', '^00968(721|9)'),
        670	    => array('tl', '^00670(7)'),
        92	    => array('pk', '^0092(3)'),
        970	    => array('ps', '^00970(59,0097259)'),
        507	    => array('pa', '^00507(120|161|20[8-9]|218|219|408|418|5|6|708|718)'),
        675	    => array('pg', '^00675(278|279|644|68|69)'),
        595	    => array('py', '^00595(96|97|98|99)'),
        51	    => array('pe', '^0051(19|349[6-7]|3499|419|429|439|449|450|519|529|539|543|549|569|619|629|639|649|659|669|679|729|739|749|769|829|839|849|949)'),
        63	    => array('ph', '^0063(9)'),
        48	    => array('pl', '^0048(60|64|66|69|88|90|5[0-1]|600|602|604|606|608|660|662|668|692|694|696|698|78[7-8]|880|886|88[8-9]|601|603|605|607|609|661|663|665|667|669|691|693|695|697|781|885|887)'),
        351	    => array('pt', '^00351(169|189|609|669|676|9)'),
        262	    => array('re', '^00262(692)'),
        250	    => array('rw', '^00250(05|08)'),
        40	    => array('ro', '^0040(7|76|72|74|78)'),
        7	    => array('ru', '^007(9|09|34|47|81|30|31|32|33|70)'),
        677	    => array('sb', '^00677(1|7|8|9)'),
        260	    => array('zm', '^00260(94|95|96|97|98|99)'),
        239	    => array('st', '^00239(9)'),
        966	    => array('sa', '^00966(135|5|8|56)'),
        46	    => array('sw', '^0046(594|67[5-6]|70|7[3-4]|76|124|12[6-7]|129|252|701[5-6]|704|707|732[1-2]|735[5-9]|73[6-7]|739|762|10|376|450|458|51[8-9]|59[2-3]|59[5-6]|673|7010|701[2-3]|701[7-8]|7019[0-1]|70195|70[2-3]|70[5-6]|730|7316|73170|731[8-9]|7327|73456|738[0-4]|761[0-4]|768[0-4]|7890|674|700|7011|7014|7019[6-9]|70[8-9]|731|7320|7323|73[3-4]|7385|768[5-9])'),
        41	    => array('ch', '^0041(20|70|74|77|79979|86|89|78|86078|76|79|86079)'),
        221	    => array('sn', '^00221(5|6|7)'),
        248	    => array('sc', '^00248(20|21|5|7)'),
        232	    => array('sl', '^00232(1|23|30|33|40|50|76|77|90)'),
        263	    => array('zw', '^00263(11|91|23)'),
        65	    => array('sg', '^0065(8|9)'),
        421	    => array('sk', '^00421(903|904|905|906|907)'),
        386	    => array('si', '^00386(2[0-1]|3[0-1]|4[0-1]|4[9-5]1|6[0-1]|6[4-7]1|880|889,004219[0-1],0042194)'),
        34	    => array('es', '^0034(6|600|607|610|617|627|634|637|647|66[1-3]|66[6-7]|67[0-1]|67[7-8]|687|697|605|615|625|635|645|65[1-8]|665|675|685|69[1-2]|695|60[1-4]|606|60[8-9]|61[1-4]|616|61[8-2]1|62[3-4]|62[6-3]3|636|63[8-4]4|646|64[8-5]0|65[9-6]0|664|66[8-9]|67[2-4]|676|67[9-8]4|686|68[9-9]0|69[3-4]|696|69[8-9])'),
        94	    => array('lk', '^0094(19|7)'),
        1869    => array('kn', '^001869(662|663|664)'),
        1758    => array('lc', '^001758(28[4-7]|384|46[0-1]|48|51[8-2]0|584|71[2-2]1)'),
        1784    => array('vc', '^001784(386|43[0-3]|438|454|455|485[1-3]|49[0-5]|52[6-3]3|593|784)'),
        249	    => array('sd', '^00249(12|703|91|92)'),
        27	    => array('za', '^0027(72|73|74|76|78|79|8)'),
        82	    => array('kr', '^0082(1)'),
        211	    => array('ss', '^00211(11|91|92|95|97|99)'),
        597	    => array('sr', '^00597(8|97|98)'),
        268	    => array('sz', '^00268(6)'),
        963	    => array('sy', '^00963(92|93|94|95|96|96|97|99)'),
        992	    => array('tj', '^00992(372|9)'),
        886	    => array('tw', '^00886(60|70|9)'),
        255	    => array('tz', '^00255(7)'),
        66	    => array('th', '^0066(1|3[0-1]|33|4[0-1]|4[6-5]2|5[7-9]|6|7[0-2]|7[8-9]|[8-9])'),
        228	    => array('tg', '^00228(0|9)'),
        676	    => array('to', '^00676(1[1-9]|4[6-9]|5[3-9]|6[3-8]|7[5-8]|8[7-9])'),
        1868    => array('tt', '^001868(3[5-4]1|42[0-1]|49|619|620|678|68|7)'),
        235	    => array('td', '^00235(2|3|4|8|9)'),
        420	    => array('cz', '^00420(60|7|93|96)'),
        90	    => array('tr', '^0090(54285[1-8]|54287[1-4]|54288[2-6]|542889|54|5338[3-7]|50|55[1-6]|559|5|53)'),
        216	    => array('tn', '^00216(2|9|20|21|22|23)'),
        993	    => array('tm', '^00993(1230|1431|2221|3221|4221|5223|6)'),
        1649    => array('tc', '^001649(231|232|241|242|243|244|245|249|724)'),
        256	    => array('ug', '^00256(3|75|76|77|78|71,0038068)'),
        380	    => array('ua', '^00380(63|93|50|66|95|99|67|96|97|98|39)'),
        36	    => array('hu', '^0036(20|30|50|60|70)'),
        598	    => array('uy', '^00598(9)'),
        998	    => array('uz', '^00998(|9)'),
        678	    => array('vu', '^00678(4|5)'),
        58	    => array('ve', '^0058(41)'),
        971	    => array('ae', '^00971(50|55)'),
        84	    => array('vn', '^0084(9)'),
        375	    => array('by', '^00375(25|29)'),
        685	    => array('ws', '^00685(7)'),
        243	    => array('zr', '^00243(68|8|9)'),
        236	    => array('cf', '^00236(0|20|5|64|707|906|909)'),
        357	    => array('cy', '^00357(9)'),
    );

    public function __construct($strPhone, $localCode=false)
    {
        ksort($this->arrCodes);
        $this->localCode = $localCode;
        $this->process($strPhone);
    }

    private function process($strPhone)
    {
        $strPhone = trim($strPhone);

        // Remove leading zero from area code
        if(substr_count($strPhone, ',') == 2)
        {
            $arrPhone = explode(',', $strPhone);
            if(substr($arrPhone[1], 0, 1) == '0')
            {
                $arrPhone[1] = substr($arrPhone[1], 1);
            }
            $strPhone = implode('', $arrPhone);
        }

        $strPhone = preg_replace('/(\s+|\,|\-)/', '', $strPhone);
        $strPhone = preg_replace('/^\+/', '', $strPhone);
        $strPhone = preg_replace('/^00/', '', $strPhone);

        $country = null;
        $regex   = null;
        $ccode   = null;

        // Check country codes
        for($i=1;$i<5;$i++)
        {
            $code = substr($strPhone, 0, $i);
            if(!empty($this->arrCodes[$code]))
            {
                $regex   = $this->arrCodes[$code][1];
                $country = $this->arrCodes[$code][0];
                $ccode   = $code;
            }
        }

        if($country === null) throw new Exception('Invalid phone number!');

        $this->mobileRegex  = $regex;
        $this->country      = $country;
        $this->countryCode  = $ccode;
        $this->strPhone     = $strPhone;
    }

    public function getLocalFormat()
    {
        return $this->getNationalFormat();
    }

    public function getNationalFormat()
    {
        return '0' . substr($this->strPhone, strlen($this->countryCode));
    }

    public function getInternationalFormat()
    {
        // Italy: Add leading zero when landline
        if($this->countryCode == 39 && substr($this->strPhone, 2, 1) != '0' && !$this->isMobile())
        {
            $this->strPhone = preg_replace('/^39/', '390', $this->strPhone);
        }

        // Italy: Remove leading zero when mobile
        if(substr($this->strPhone, 0, 3) == '390' && $this->isMobile())
        {
            $this->strPhone = preg_replace('/^390/', '39', $this->strPhone);
        }

        return '+' . $this->strPhone;
    }

    public function isForeign()
    {
        if($this->countryCode != $this->localCode) return true;
        return false;
    }

    public function isMobile()
    {
        if(preg_match('/' . $this->mobileRegex . '/', '00' . $this->strPhone)) return true;
        return false;
    }

    public function getCountry()
    {
        return $this->arrCodes[$this->countryCode][0];
    }

    public function __toString()
    {
        return $this->getInternationalFormat();
    }
}
